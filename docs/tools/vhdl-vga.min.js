var freqs=[["640x350, 70Hz",25.175,640,16,96,48,350,37,2,60,1,0],["640x350, 85Hz",31.5,640,32,64,96,350,32,3,60,1,0],["640x400, 70Hz",25.175,640,16,96,48,400,12,2,35,0,1],["640x400, 85Hz",31.5,640,32,64,96,400,1,3,41,0,1],["640x480, 60Hz",25.175,640,16,96,48,480,11,2,31,0,0],["640x480, 72Hz",31.5,640,24,40,128,480,9,3,28,0,0],["640x480, 75Hz",31.5,640,16,96,48,480,11,2,32,0,0],["640x480, 85Hz",36,640,32,48,112,480,1,3,25,0,0],["640x480, 100Hz",43.16,640,40,64,104,480,1,3,25,0,1],["720x400, 85Hz",35.5,720,36,72,108,400,1,3,42,0,1],["768x576, 60Hz",34.96,768,24,80,104,576,1,3,17,0,1],["768x576, 72Hz",42.93,768,32,80,112,576,1,3,21,0,1],["768x576, 75Hz",45.51,768,40,80,120,576,1,3,22,0,1],["768x576, 85Hz",51.84,768,40,80,120,576,1,3,25,0,1],["768x576, 100Hz",62.57,768,48,80,128,576,1,3,31,0,1],["800x600, 56Hz",38.1,800,32,128,128,600,1,4,14,1,1],["800x600, 60Hz",40,800,40,128,88,600,1,4,23,1,1],["800x600, 72Hz",50,800,56,120,64,600,37,6,23,1,1],["800x600, 75Hz",49.5,800,16,80,160,600,1,2,21,1,1],["800x600, 85Hz",56.25,800,32,64,152,600,1,3,27,1,1],["800x600, 100Hz",68.18,800,48,88,136,600,1,3,32,0,1],["1024x768, 60Hz",65,1024,24,136,160,768,3,6,29,0,0],["1024x768, 70Hz",75,1024,24,136,144,768,3,6,29,0,0],["1024x768, 75Hz",78.75,1024,16,96,176,768,1,3,28,1,1],["1024x768, 85Hz",94.5,1024,48,96,208,768,1,3,36,1,1],["1024x768, 100Hz",113.31,1024,72,112,184,768,1,3,42,0,1],["1152x864, 60Hz",81.62,1152,64,120,184,864,1,3,27,0,1],["1152x864, 75Hz",108,1152,64,128,256,864,1,3,32,1,1],["1152x864, 85Hz",119.65,1152,72,128,200,864,1,3,39,0,1],["1152x864, 100Hz",143.47,1152,80,128,208,864,1,3,47,0,1],["1280x720, 60Hz",74.25,1280,110,40,220,720,5,5,20,1,1],["1280x800, 60Hz",83.46,1280,64,136,200,800,1,3,24,0,1],["1280x960, 60Hz",108,1280,96,112,312,960,1,3,36,1,1],["1280x960, 72Hz",124.54,1280,88,136,224,960,1,3,37,0,1],["1280x960, 75Hz",129.86,1280,88,136,224,960,1,3,38,0,1],["1280x960, 85Hz",148.5,1280,64,160,224,960,1,3,47,1,1],["1280x960, 100Hz",178.99,1280,96,144,240,960,1,3,53,0,1],["1280x1024, 60Hz",108,1280,48,112,248,1024,1,3,38,1,1],["1280x1024, 75Hz",135,1280,16,144,248,1024,1,3,38,1,1],["1280x1024, 85Hz",157.5,1280,64,160,224,1024,1,3,44,1,1],["1280x1024, 100Hz",190.96,1280,96,144,240,1024,1,3,57,0,1],["1368x768, 60Hz",85.86,1368,72,144,216,768,1,3,23,0,1],["1400x1050, 60Hz",122.61,1400,88,152,240,1050,1,3,33,0,1],["1400x1050, 72Hz",149.34,1400,96,152,248,1050,1,3,40,0,1],["1400x1050, 75Hz",155.85,1400,96,152,248,1050,1,3,42,0,1],["1400x1050, 85Hz",179.26,1400,104,152,256,1050,1,3,49,0,1],["1400x1050, 100Hz",214.39,1400,112,152,264,1050,1,3,58,0,1],["1440x900, 60Hz",106.47,1440,80,152,232,900,1,3,28,0,1],["1600x1200, 60Hz",162,1600,64,192,304,1200,1,3,46,1,1],["1600x1200, 65Hz",175.5,1600,64,192,304,1200,1,3,46,1,1],["1600x1200, 70Hz",189,1600,64,192,304,1200,1,3,46,1,1],["1600x1200, 75Hz",202.5,1600,64,192,304,1200,1,3,46,1,1],["1600x1200, 85Hz",229.5,1600,64,192,304,1200,1,3,46,1,1],["1600x1200, 100Hz",280.64,1600,128,176,304,1200,1,3,67,0,1],["1680x1050, 60Hz",147.14,1680,104,184,288,1050,1,3,33,0,1],["1792x1344, 60Hz",204.8,1792,128,200,328,1344,1,3,46,0,1],["1792x1344, 75Hz",261,1792,96,216,352,1344,1,3,69,0,1],["1856x1392, 60Hz",218.3,1856,96,224,352,1392,1,3,43,0,1],["1856x1392, 75Hz",288,1856,128,224,352,1392,1,3,104,0,1],["1920x1080, 60Hz",148.5,1920,88,44,148,1080,4,5,36,1,1],["1920x1080, 50Hz",148.5,1920,528,44,148,1080,36,5,4,1,1],["1920x1200, 60Hz",193.16,1920,128,208,336,1200,1,3,38,0,1],["1920x1440, 60Hz",234,1920,128,208,344,1440,1,3,56,0,1],["1920x1440, 75Hz",297,1920,144,224,352,1440,1,3,56,0,1]],freqp=48,divq=32,nsd=function(n,t){return n==t?n:n>t?nsd(n-t,t):n<t?nsd(n,t-n):void 0},norm=function(n){var t=nsd(n[0],n[1]);return[n[0]/t,n[1]/t]},deals=function(n){return freqs.map(function(t){var e=t[1];return[t,norm([Math.floor(1e3*e),Math.floor(1e3*n)])]})},reasonable=function(n){return n.filter(function(n){var t=n[1][0],e=n[1][1];return e<divq&&t<divq})},ratio=function(n){var t=n.match(/(.*)x(.*),.*/),e=norm([1*t[1],1*t[2]]),r=e[0]+":"+e[1];return"8:5"==r&&(r="16:10"),r},mline=function(n){var t=ratio(n[0][0]);n[0][0]+=" ("+t+")";var e=n[0].map(function(n){return"<td>"+n+"</td>"});n[1][0],n[1][1];return e+="<td>"+n[1][0]+"/"+n[1][1]+"</td>",e},mtable=function(n){return n.map(function(n){return"<tr data-type='"+JSON.stringify(n[0])+"' data-pll='"+JSON.stringify(n[1])+"'>"+mline(jQuery.extend(!0,{},n))+"</tr>"})},dotable=function(n){var t=n.reduce(function(n,t){return n+t},"");$("#tabout tbody").html(t),$("#tabout").show()},run=function(){$("#waves").hide(),$("#sync").hide(),freqp=parseInt($("#freq").val()),isNaN(freqp)||freqp<=0?$("#freq").addClass("is-invalid"):($("#freq").removeClass("is-invalid"),divq=parseInt($("#divq").val()),dotable(mtable(reasonable(deals(freqp)))),$("#tabout tbody tr").click(function(){var n=JSON.parse($(this).attr("data-type")),t=JSON.parse($(this).attr("data-pll"));$("#hsi").attr("src","./tools/HS"+n[10]+".png"),$("#vsi").attr("src","./tools/VS"+n[11]+".png"),$("#hv").html(n[2]),$("#hf").html(n[3]),$("#hs").html(n[4]),$("#hb").html(n[5]),$("#vv").html(n[6]),$("#vf").html(n[7]),$("#vs").html(n[8]),$("#vb").html(n[9]),$("#sync").html(syncgen(n,t)),$("#waves").show(),$("#sync").show()}))},syncgen=function(n,t){var e="",r=n[2]+n[3]+n[4]+n[5],s=n[6]+n[7]+n[8]+n[9],i=n[10],l=n[11],o=1==i?0:1,a=1==l?0:1;return e+="-- GENERATED BY http://vhdl.cz/vhdl/vga/\n",e+="-- &copy; 2015 Martin Maly\n\n",e+="-- "+n[0]+"\n",e+="-- Pixel clock from PLL: "+n[1]+"MHz\n\n",e+="-- Main frequency: "+freqp+"MHz\n",e+="-- PLL multiplier: "+t[0]+", divider: "+t[1]+"\n",e+="library ieee;\n",e+="use ieee.std_logic_1164.all;\n",e+="use ieee.numeric_std.all;\n",e+="entity sync is\n",e+="port (\n",e+="clk: in std_logic;\n",e+="posx:out integer range 0 to "+(n[2]-1)+";\n",e+="posy:out integer range 0 to "+(n[6]-1)+";\n",e+="hsync,vsync: out std_logic;\n",e+="blank: out std_logic\n",e+=");\n",e+="end sync;\n\n",e+="architecture main of sync is\n",e+="signal hpos: integer range 0 to "+r+":=0;\n",e+="signal vpos: integer range 0 to "+s+":=0;\n",e+="signal x: integer range 0 to "+(n[2]-1)+":=0;\n",e+="signal y: integer range 0 to "+(n[6]-1)+":=0;\n",e+="begin\n",e+="    process(clk) is begin\n",e+="      if rising_edge(clk) then\n",e+="        if (hpos&lt;"+r+") then hpos&lt;=hpos+1; x&lt;=x+1;\n",e+="        else\n",e+="           hpos&lt;=0;\n",e+="           x&lt;=0;\n",e+="           if (vpos&lt;"+s+") then vpos&lt;=vpos+1; y&lt;=y+1;\n",e+="           else vpos&lt;=0;y&lt;=0;\n",e+="           end if; --vpos\n",e+="        end if; --hpos\n",e+="        if (hpos&gt;="+n[3]+" and hpos&lt;"+(n[3]+n[4])+") then\n",e+="           hsync&lt;='"+i+"';\n",e+="        else\n",e+="           hsync&lt;='"+o+"';\n",e+="        end if;\n",e+="        if (vpos&gt;="+n[7]+" and vpos&lt;"+(n[7]+n[8])+") then\n",e+="           vsync&lt;='"+l+"';\n",e+="        else\n",e+="           vsync&lt;='"+a+"';\n",e+="        end if;\n",e+="        if ((vpos&gt;=0 and vpos&lt;"+(n[7]+n[8]+n[9])+")) then y&lt;=0; end if;\n",e+="        if ((hpos&gt;=0 and hpos&lt;"+(n[3]+n[4]+n[5])+") or (vpos&gt;=0 and vpos&lt;"+(n[7]+n[8]+n[9])+")) then\n",e+="           blank&lt;='1';\n",e+="           x&lt;=0;\n",e+="        else;\n",e+="           blank&lt;='0';\n",e+="        end if;\n",e+="\tposx&lt;=x;\n",e+="\tposy&lt;=y;\n",e+="\tend if; --clk\n",e+="    end process;\n",e+="end main; --architecture    \n",e};